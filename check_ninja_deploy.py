#!/usr/bin/env python3
import os
import sqlite3
import socket
import requests
import importlib

print("üîç NINJA-DASHBOARD BOT DEPLOYMENT CHECK\n")

# ==========================
# Environment
# ==========================
ENV_VARS = [
    "TELEGRAM_BOT_TOKEN",
    "TELEGRAM_ADMIN_ID",
    "TELEGRAM_CHANNEL_ID",
    "DATABASE_URL",
    "WEBHOOK_URL"
]

env_missing = False
for var in ENV_VARS:
    if not os.getenv(var):
        print(f"‚ùå {var} missing or empty")
        env_missing = True
    else:
        print(f"‚úÖ {var} detected")

# ==========================
# Python modules
# ==========================
MODULES = ["flask", "requests", "sqlalchemy", "aiohttp", "web3", "telegram", "dotenv"]
for mod in MODULES:
    try:
        importlib.import_module(mod)
        print(f"‚úÖ Module loaded: {mod}")
    except ImportError:
        print(f"‚ùå Missing module: {mod}")

# ==========================
# Database
# ==========================
db_path = os.getenv("DATABASE_PATH", "subscriptions.db")
if os.path.exists(db_path):
    print(f"‚úÖ Database ready ‚Üí {db_path}")
else:
    print(f"‚ùå Database file missing ‚Üí {db_path}")

# ==========================
# Internet connectivity
# ==========================
try:
    requests.get("https://www.google.com", timeout=5)
    print("‚úÖ Internet connection OK")
except:
    print("‚ùå Internet connection failed")

# ==========================
# Webhook check
# ==========================
webhook = os.getenv("WEBHOOK_URL")
if webhook:
    try:
        resp = requests.get(webhook, timeout=5)
        print(f"üåê Webhook reachable ‚Üí {webhook} [Status: {resp.status_code}]")
    except:
        print(f"‚ùå Webhook unreachable ‚Üí {webhook}")
else:
    print("‚ùå Webhook URL not set")

# ==========================
# Telegram bot test (async)
# ==========================
try:
    from telegram import Bot
    import asyncio

    async def test_bot():
        bot = Bot(token=os.getenv("TELEGRAM_BOT_TOKEN"))
        me = await bot.get_me()
        print(f"ü§ñ Telegram bot connected ‚Üí @{me.username}")

    asyncio.run(test_bot())
except Exception as e:
    print(f"‚ùå Telegram bot connection failed: {e}")

# ==========================
# Project files
# ==========================
FILES = ["app.py", "main.py", "bot.py", "bot_handlers.py", "requirements.txt",
         "Dockerfile", "init_db.py", "start_icegods.py", "utils"]

for f in FILES:
    if os.path.exists(f):
        print(f"‚úÖ Found: {f}")
    else:
        print(f"‚ùå Missing: {f}")

print("\nüß© DEPLOYMENT READINESS CHECK COMPLETE.")
print("üí° If all checks passed, the bot is ready to host.")
print("‚ö†Ô∏è Any missing modules, env vars, or files must be fixed before deployment.")
